<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:ExpressRunner">
    <Style x:Key="SuccessIcon" TargetType="{x:Type Control}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Viewbox Stretch="Uniform">
                        <Canvas Background="Green" Height="32" Width="32">
                            <Path Data="M 6 16 L 16 26 L 26 6" Stroke="White" StrokeThickness="3" StrokeLineJoin="Bevel" />
                        </Canvas>
                    </Viewbox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="FailIcon" TargetType="{x:Type Control}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Viewbox Stretch="Uniform">
                        <Canvas Background="Red" Height="32" Width="32">
                            <Path Data="M 6 6 L 26 26 M 6 26 L 26 6" Stroke="White" StrokeThickness="3" StrokeLineJoin="Bevel" />
                        </Canvas>
                    </Viewbox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="NotRunIcon" TargetType="{x:Type Control}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Viewbox Stretch="Uniform">
                        <Canvas Background="Gray" Height="32" Width="32">
                            <Path Data="M 6 16 L 26 16" Stroke="White" StrokeThickness="3" StrokeLineJoin="Bevel" />
                        </Canvas>
                    </Viewbox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TestListBoxItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontSize" Value="21" />
        <Setter Property="FontWeight" Value="Light" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Margin" Value="6,3,6,3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.5" To="0.1" Storyboard.TargetProperty="(Background).(SolidColorBrush.Opacity)" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.5" To="0.0" Storyboard.TargetProperty="(Background).(SolidColorBrush.Opacity)" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers> -->
    </Style>

    <Style x:Key="TestListBox" TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="#000" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource TestListBoxItem}" />
    </Style>
    
    

    <Style x:Key="TestItemName" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontWeight" Value="Light" />
    </Style>

    <DataTemplate x:Key="TestItem" DataType="{x:Type local:TestItem}">
        <Border x:Name="bg" Padding="6">
            <Border.Background>
                <SolidColorBrush Color="#fff" Opacity="0.1" />
            </Border.Background>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="6" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <ContentControl x:Name="StatusIcon" Style="{StaticResource NotRunIcon}" VerticalAlignment="Top" Width="21pt" />
                <TextBlock Grid.Column="2" FontSize="21" Text="{Binding Name}" />
            </Grid>
        </Border>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}, Mode=FindAncestor}}"
                         Value="True">
                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.5"
                                             To="0.2"
                                             Storyboard.TargetName="bg"
                                             Storyboard.TargetProperty="(Background).(SolidColorBrush.Opacity)" />
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.5"
                                             To="0.1"
                                             Storyboard.TargetName="bg"
                                             Storyboard.TargetProperty="(Background).(SolidColorBrush.Opacity)" />
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.ExitActions>
            </DataTrigger>
            <DataTrigger Binding="{Binding Status}" Value="Succeeded">
                <Setter Property="Background" TargetName="bg">
                    <Setter.Value>
                        <SolidColorBrush Color="#0f0" Opacity="0.1" />
                    </Setter.Value>
                </Setter>
                <Setter Property="Style" TargetName="StatusIcon" Value="{StaticResource SuccessIcon}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Status}" Value="Failed">
                <Setter Property="Background" TargetName="bg">
                    <Setter.Value>
                        <SolidColorBrush Color="#f00" Opacity="0.1" />
                    </Setter.Value>
                </Setter>
                <Setter Property="Style" TargetName="StatusIcon" Value="{StaticResource FailIcon}" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
</ResourceDictionary>