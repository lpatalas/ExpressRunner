<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:ExpressRunner">
    
    <Style x:Key="ApplicationWindow" TargetType="{x:Type Window}">
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontWeight" Value="Light" />
    </Style>
    
    <Style x:Key="SuccessIcon" TargetType="{x:Type Control}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Viewbox Stretch="Uniform">
                        <Canvas Background="Green" Height="32" Width="32">
                            <Path Data="M 6 16 L 16 26 L 26 6" Stroke="White" StrokeThickness="3" StrokeLineJoin="Bevel" />
                        </Canvas>
                    </Viewbox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="FailIcon" TargetType="{x:Type Control}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Viewbox Stretch="Uniform">
                        <Canvas Background="Red" Height="32" Width="32">
                            <Path Data="M 6 6 L 26 26 M 6 26 L 26 6" Stroke="White" StrokeThickness="3" StrokeLineJoin="Bevel" />
                        </Canvas>
                    </Viewbox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="NotRunIcon" TargetType="{x:Type Control}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Viewbox Stretch="Uniform">
                        <Canvas Background="Gray" Height="32" Width="32">
                            <Path Data="M 6 16 L 26 16" Stroke="White" StrokeThickness="3" StrokeLineJoin="Bevel" />
                        </Canvas>
                    </Viewbox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TestListBoxItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="6" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border Background="{TemplateBinding Background}"
                            Margin="{TemplateBinding Margin}"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="#222" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TestListBox" TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="Black" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource TestListBoxItem}" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
    </Style>
    
    <Style x:Key="TestItemName" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontWeight" Value="Light" />
    </Style>

    <DataTemplate x:Key="TestItem" DataType="{x:Type local:TestItem}">
        <StackPanel Orientation="Horizontal">
            <ContentControl x:Name="StatusIcon" Grid.RowSpan="2" Style="{StaticResource NotRunIcon}" />
            <StackPanel Margin="6,0,0,0" Orientation="Vertical">
                <TextBlock Grid.Column="1"
                           FontSize="21"
                           Text="{Binding Name}" />
                <TextBlock Grid.Column="1"
                           Grid.Row="1"
                           FontSize="14"
                           Text="{Binding Status}" />
            </StackPanel>
        </StackPanel>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Status}" Value="Succeeded">
                <Setter Property="Style" TargetName="StatusIcon" Value="{StaticResource SuccessIcon}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Status}" Value="Failed">
                <Setter Property="Style" TargetName="StatusIcon" Value="{StaticResource FailIcon}" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    
    <Style x:Key="{x:Type TreeView}" TargetType="{x:Type TreeView}">
        <Setter Property="Background" Value="Black" />
        <Setter Property="Foreground" Value="White" />
    </Style>
    
    <Style x:Key="TreeViewItemExpander" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Viewbox Stretch="Uniform">
                        <Canvas Width="16" Height="16">
                            <Ellipse Width="16"
                                     Height="16"
                                     Fill="{TemplateBinding Background}"
                                     Stroke="White"
                                     StrokeThickness="1" />
                            <Line x:Name="VLine"
                                  X1="8" X2="8"
                                  Y1="4" Y2="12"
                                  Stroke="White"
                                  StrokeThickness="1" />
                            <Line X1="4" X2="12"
                                  Y1="8" Y2="8"
                                  Stroke="White"
                                  StrokeThickness="1" />
                        </Canvas>
                    </Viewbox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#222" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type TreeViewItem}" TargetType="{x:Type TreeViewItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontSize" Value="21" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Padding" Value="6" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Border Padding="0,0,6,0">
                            <ToggleButton IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                          Style="{StaticResource TreeViewItemExpander}" />
                        </Border>
                        <Border Grid.Column="1"
                                Background="{TemplateBinding Background}">
                            <ContentPresenter x:Name="PART_Header"
                                              ContentSource="Header" />
                        </Border>
                        <ItemsPresenter Grid.Column="1"
                                        Grid.Row="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="#222" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>